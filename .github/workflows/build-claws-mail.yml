name: Build Claws Mail Portable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable universe repo and install dependencies
        run: |
          sudo apt update
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install -y --no-install-recommends \
            build-essential git wget musl-tools musl-dev \
            autoconf automake libtool gettext pkg-config make binutils \
            libgtk-3-dev libglib2.0-dev libgdk-pixbuf2.0-dev \
            libnotify-dev libstartup-notification0-dev libcompfaceg1-dev \
            glib-networking ca-certificates xterm hicolor-icon-theme

      - name: Build and install Nettle with musl (static)
        run: |
          wget https://ftp.gnu.org/gnu/nettle/nettle-3.7.3.tar.gz
          tar -xzf nettle-3.7.3.tar.gz
          cd nettle-3.7.3
          CC=musl-gcc CFLAGS="-Wno-discarded-qualifiers" ./configure --prefix=/usr/local/musl --libdir=/usr/local/musl/lib --enable-mini-gmp --enable-static --disable-shared
          make -j$(nproc)
          sudo make install
          export PKG_CONFIG_PATH="/usr/local/musl/lib/pkgconfig:$PKG_CONFIG_PATH"

      - name: Build and install GnuTLS with musl (static)
        run: |
          wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.8/gnutls-3.8.5.tar.xz
          tar -xJf gnutls-3.8.5.tar.xz
          cd gnutls-3.8.5
          [ -f Makefile ] && make distclean || true
          export PKG_CONFIG_PATH="/usr/local/musl/lib/pkgconfig:$PKG_CONFIG_PATH"
          CC=musl-gcc ./configure --prefix=/usr/local/musl \
            --with-included-libtasn1 \
            --with-included-unistring \
            --without-p11-kit \
            --disable-guile \
            --disable-doc \
            --disable-brotli \
            --enable-static --disable-shared \
            --with-default-trust-store-file=/etc/ssl/certs/ca-certificates.crt \
            CFLAGS="-I/usr/local/musl/include" LDFLAGS="-L/usr/local/musl/lib"
          make -j$(nproc)
          sudo make install

      - name: Build and install libetpan with musl (static)
        run: |
          git clone https://github.com/dinhvh/libetpan.git
          cd libetpan
          git checkout 1.9.4
          sed -i '/if (status == MAILIMAP_NO_ERROR && r == MAILIMAP_ERROR_PARSE) {/a\
            if (strncmp(line, "* OK Welcome!", 12) == 0) { \
              mailimap->imap_response = line; \
              mailimap->imap_state = MAILIMAP_STATE_NON_AUTHENTICATED; \
              status = MAILIMAP_NO_ERROR; \
              if (getenv("LIBETPAN_DEBUG")) fprintf(stderr, "libetpan: Accepted Yahoo greeting: %s\\n", line); \
            }' src/low-level/imap/mailimap_parser.c
          ./autogen.sh
          CC=musl-gcc CFLAGS="-g -O0 -DDEBUG" LDFLAGS="-static" ./configure --prefix=/usr/local/musl --enable-static --disable-shared --enable-debug
          make -j$(nproc)
          sudo make install

      - name: Clone and build Claws Mail
        run: |
          git clone https://git.claws-mail.org/readonly/claws.git claws-mail
          cd claws-mail
          git checkout claws-4.3.0 || echo "Tag claws-4.3.0 not found; using latest commit"
          ./autogen.sh
          export PKG_CONFIG_PATH="/usr/local/musl/lib/pkgconfig:$PKG_CONFIG_PATH"
          CC=gcc CFLAGS="-I/usr/local/musl/include -g -O0" LDFLAGS="-L/usr/local/musl/lib" \
            ./configure --prefix=/tmp/claws-portable \
            --disable-manual \
            --enable-gnutls \
            --enable-libetpan \
            --enable-compface \
            --enable-startup-notification \
            --enable-static
          make -j$(nproc)
          make install

      - name: Bundle libraries and assets
        run: |
          mkdir -p /tmp/claws-portable/lib /tmp/claws-portable/share/icons/hicolor /tmp/claws-portable/etc/ssl/certs
          # Bundle GTK and gdk-pixbuf shared libs (can't fully static link these)
          for lib in \
            libgtk-3.so.0 libgdk-3.so.0 libglib-2.0.so.0 libgobject-2.0.so.0 \
            libgio-2.0.so.0 libpango-1.0.so.0 libpangocairo-1.0.so.0 libcairo.so.2 \
            libgdk_pixbuf-2.0.so.0 libnotify.so.4 libstartup-notification-1.so.0 \
            libcompface.so.1 libpng16.so.16 libz.so.1 libffi.so.8; do
            cp -v /usr/lib/x86_64-linux-gnu/$lib /tmp/claws-portable/lib/ 2>/dev/null || \
            cp -v /lib/x86_64-linux-gnu/$lib /tmp/claws-portable/lib/ 2>/dev/null || \
            echo "Warning: $lib not found"
          done
          # Bundle gdk-pixbuf loaders
          mkdir -p /tmp/claws-portable/lib/gdk-pixbuf-2.0/2.10.0/loaders
          cp -r /usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders/* /tmp/claws-portable/lib/gdk-pixbuf-2.0/2.10.0/loaders/
          cp /usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders /tmp/claws-portable/bin/
          # Bundle GIO modules
          cp -r /usr/lib/x86_64-linux-gnu/gio/modules/* /tmp/claws-portable/lib/ 2>/dev/null || true
          # Bundle certificates and icons
          cp -r /etc/ssl/certs/*.pem /tmp/claws-portable/etc/ssl/certs/
          cp -r /usr/share/icons/hicolor/* /tmp/claws-portable/share/icons/hicolor/
          # Generate loaders.cache with relative paths
          LD_LIBRARY_PATH=/tmp/claws-portable/lib /tmp/claws-portable/bin/gdk-pixbuf-query-loaders /tmp/claws-portable/lib/gdk-pixbuf-2.0/2.10.0/loaders/* > /tmp/claws-portable/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache

      - name: Create wrapper script
        run: |
          cat << 'EOF' > /tmp/claws-portable/run-claws.sh
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          export LD_LIBRARY_PATH="$HERE/lib:$LD_LIBRARY_PATH"
          export GDK_PIXBUF_MODULEDIR="$HERE/lib/gdk-pixbuf-2.0/2.10.0/loaders"
          export GDK_PIXBUF_MODULE_FILE="$HERE/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache"
          export GIO_MODULE_DIR="$HERE/lib"
          export GIO_EXTRA_MODULES="$HERE/lib"
          export GNUTLS_SYSTEM_PRIORITY_FILE="$HERE/etc/ssl/certs"
          export SSL_CERT_DIR="$HERE/etc/ssl/certs"
          export LIBETPAN_DEBUG=1
          export LIBETPAN_LOG_LEVEL=7
          export XDG_DATA_DIRS="$HERE/share:$XDG_DATA_DIRS"
          export XDG_RUNTIME_DIR="/tmp/claws-mail-$USER-$$"
          mkdir -p "$XDG_RUNTIME_DIR" || { echo "Failed to create $XDG_RUNTIME_DIR" >&2; exit 1; }
          CONFIG_DIR="$HOME/.claws-mail"
          mkdir -p "$CONFIG_DIR"
          if [ ! -f "$CONFIG_DIR/clawsrc" ]; then
            echo "[claws-mail]" > "$CONFIG_DIR/clawsrc"
            echo "version=4" >> "$CONFIG_DIR/clawsrc"
          fi
          if [ ! -f "$CONFIG_DIR/folderitemrc" ]; then
            echo "[folder_settings]" > "$CONFIG_DIR/folderitemrc"
          fi
          if [ ! -f "$CONFIG_DIR/accountrc" ]; then
            echo "[Account: 1]" > "$CONFIG_DIR/accountrc"
            echo "use_proxy=0" >> "$CONFIG_DIR/accountrc"
          fi
          LOGFILE="$HOME/claws-mail-run.log"
          GNUTLS_LOGFILE="$HOME/claws-mail-gnutls.log"
          echo "Starting Claws Mail..." | tee -a "$LOGFILE"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH" | tee -a "$LOGFILE"
          echo "GDK_PIXBUF_MODULEDIR: $GDK_PIXBUF_MODULEDIR" | tee -a "$LOGFILE"
          echo "GDK_PIXBUF_MODULE_FILE: $GDK_PIXBUF_MODULE_FILE" | tee -a "$LOGFILE"
          echo "GIO_MODULE_DIR: $GIO_MODULE_DIR" | tee -a "$LOGFILE"
          echo "XDG_DATA_DIRS: $XDG_DATA_DIRS" | tee -a "$LOGFILE"
          echo "System info:" | tee -a "$LOGFILE"
          uname -a | tee -a "$LOGFILE" 2>&1
          ldd "$HERE/bin/claws-mail" | tee -a "$LOGFILE" 2>&1
          "$HERE/bin/claws-mail" --debug --alternate-config-dir "$CONFIG_DIR" 2>>"$GNUTLS_LOGFILE" | tee -a "$LOGFILE"
          EXIT_CODE=${PIPESTATUS[0]}
          echo "Claws Mail exited with code $EXIT_CODE" | tee -a "$LOGFILE"
          exit $EXIT_CODE
          EOF
          chmod +x /tmp/claws-portable/run-claws.sh

      - name: Package as tarball
        run: |
          tar -czf claws-mail-4.3.0-portable.tar.gz -C /tmp claws-portable

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: claws-mail-portable
          path: claws-mail-4.3.0-portable.tar.gz
