name: Build Claws Mail AppImage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Temporarily keep Ubuntu to test AppRun fix; switch to alpine later
    container: alpine:edge  # Use Alpine for musl compatibility

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build tools and dependencies
        run: |
          apk update
          apk add --no-cache \
            bash build-base git curl wget pkgconf gtk+3.0-dev fuse \
            libetpan-dev gnutls-dev gpgme-dev enchant2-dev \
            poppler-dev libcanberra-dev libnotify-dev perl-dev \
            python3-dev libytnef-dev libical-dev libarchive-dev openldap-dev \
            libcompface-dev db-dev libx11-dev libsm-dev libsoup-dev \
            gumbo-parser-dev libsecret-dev json-glib-dev \
            ghostscript spamassassin appstream-glib webkit2gtk-dev \
            linux-headers patchelf

      - name: Set up working directory
        run: |
          mkdir -p ~/claws-mail-appimage-build
          mkdir -p ~/claws-mail-appimage-build/install
          mkdir -p ~/claws-mail-appimage-build/ClawsMail.AppDir

      - name: Download Claws Mail source
        run: |
          cd ~/claws-mail-appimage-build
          wget "https://www.claws-mail.org/download.php?file=releases/claws-mail-4.3.0.tar.xz" -O claws-mail-4.3.0.tar.xz
          tar -xf claws-mail-4.3.0.tar.xz

      - name: Configure Claws Mail
        run: |
          cd ~/claws-mail-appimage-build/claws-mail-4.3.0
          ./configure \
            --prefix="$HOME/claws-mail-appimage-build/install" \
            --enable-gtk3 --enable-libetpan --enable-gnutls --enable-pgp-core \
            --enable-pgp-inline --enable-pgp-mime --enable-enchant --enable-poppler \
            --enable-canberra --enable-notify --enable-perl --enable-python \
            --enable-tnef --enable-vcalendar --enable-ldap --enable-compface \
            --enable-dillo --enable-fancy --enable-rssyl --enable-spamassassin \
            --enable-bogofilter --enable-notification --enable-pdf-viewer \
            --enable-spam-report --enable-address-keeper --enable-acpi-notifier \
            --enable-maildir --enable-newmail --enable-managesieve || \
            echo "Some plugins may be disabled."

      - name: Build and install Claws Mail
        run: |
          cd ~/claws-mail-appimage-build/claws-mail-4.3.0
          make -j$(nproc)
          make install

      - name: Prepare AppImage structure
        run: |
          cd ~/claws-mail-appimage-build/ClawsMail.AppDir
          mkdir -p usr/bin usr/lib usr/share/applications usr/share/icons/hicolor/48x48/apps usr/share/perl
          cp ~/claws-mail-appimage-build/install/bin/claws-mail usr/bin/
          DESKTOP_FILE="$HOME/claws-mail-appimage-build/install/share/applications/claws-mail.desktop"
          if [ -f "$DESKTOP_FILE" ]; then
            cp "$DESKTOP_FILE" .
            sed -i 's/Exec=claws-mail %u/Exec=AppRun/' claws-mail.desktop
            cp claws-mail.desktop usr/share/applications/
          else
            echo "[Desktop Entry]" > claws-mail.desktop
            echo "Name=Claws Mail" >> claws-mail.desktop
            echo "Exec=AppRun" >> claws-mail.desktop
            echo "Type=Application" >> claws-mail.desktop
            echo "Icon=claws-mail" >> claws-mail.desktop
            echo "Categories=Network;Email;" >> claws-mail.desktop
            echo "Terminal=false" >> claws-mail.desktop
            cp claws-mail.desktop usr/share/applications/
          fi
          chmod 644 claws-mail.desktop usr/share/applications/claws-mail.desktop
          ICON_FILE="$HOME/claws-mail-appimage-build/install/share/icons/hicolor/48x48/apps/claws-mail.png"
          if [ -f "$ICON_FILE" ]; then
            cp "$ICON_FILE" claws-mail.png
            cp "$ICON_FILE" usr/share/icons/hicolor/48x48/apps/
          else
            echo "Warning: Icon file not found at $ICON_FILE, skipping icon setup."
          fi
          if [ -f claws-mail.png ]; then
            chmod 644 claws-mail.png usr/share/icons/hicolor/48x48/apps/claws-mail.png
          fi

      - name: Create AppRun with debug logging
        run: |
          cd ~/claws-mail-appimage-build/ClawsMail.AppDir
          cat <<EOF > AppRun
          #!/bin/bash
          HERE="\$(dirname "\$(readlink -f "\${0}")")"
          LOG_FILE="\$HOME/.claws-mail-appimage.log"
          echo "[$(date)] AppImage started" > "\$LOG_FILE" 2>&1
          echo "Environment: \$PATH" >> "\$LOG_FILE" 2>&1
          echo "LD_LIBRARY_PATH: \$LD_LIBRARY_PATH" >> "\$LOG_FILE" 2>&1
          echo "Running claws-mail from: \$HERE/usr/bin/claws-mail" >> "\$LOG_FILE" 2>&1
          "\$HERE/usr/bin/claws-mail" "\$@" 2>> "\$LOG_FILE"
          EXIT_CODE=\$?
          echo "[$(date)] AppImage exited with code \$EXIT_CODE" >> "\$LOG_FILE" 2>&1
          exit \$EXIT_CODE
          EOF
          chmod +x AppRun

      - name: Bundle external tools
        run: |
          cd ~/claws-mail-appimage-build/ClawsMail.AppDir
          cp /usr/bin/gs usr/bin/
          cp /usr/bin/spamassassin usr/bin/
          cp /usr/bin/perl usr/bin/
          if [ -d "/usr/lib/perl" ]; then
            cp -r /usr/lib/perl usr/lib/
          elif [ -d "/usr/lib/perl5" ]; then
            cp -r /usr/lib/perl5 usr/lib/
          else
            echo "Warning: Perl libraries not found; SpamAssassin may not work."
          fi
          if [ -d "/usr/share/perl" ]; then
            cp -r /usr/share/perl/* usr/share/perl/
          fi

      - name: Download build tools
        run: |
          cd ~/claws-mail-appimage-build
          wget "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage" -O linuxdeploy.AppImage
          wget "https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage" -O appimagetool.AppImage
          chmod +x linuxdeploy.AppImage appimagetool.AppImage

      - name: Bundle dependencies and create AppImage
        run: |
          cd ~/claws-mail-appimage-build
          ./linuxdeploy.AppImage --appdir ClawsMail.AppDir \
            --executable=ClawsMail.AppDir/usr/bin/claws-mail \
            --executable=ClawsMail.AppDir/usr/bin/gs \
            --executable=ClawsMail.AppDir/usr/bin/perl \
            --desktop-file=ClawsMail.AppDir/claws-mail.desktop \
            --icon-file=ClawsMail.AppDir/claws-mail.png
          ./appimagetool.AppImage ClawsMail.AppDir claws-mail-4.3.0.AppImage

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: claws-mail-appimage
          path: ~/claws-mail-appimage-build/claws-mail-4.3.0.AppImage

      - name: Display SHA256 checksum
        run: |
          sha256sum ~/claws-mail-appimage-build/claws-mail-4.3.0.AppImage
