name: Build Claws Mail AppImage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable universe repo and install dependencies
        run: |
          sudo apt update
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install -y build-essential git wget musl-tools musl-dev \
            autoconf automake libtool gettext \
            libgtk-3-dev libglib2.0-dev \
            libnotify-dev libstartup-notification0-dev libcompfaceg1-dev \
            fuse3 libfuse3-dev xterm

      - name: Build and install Nettle with musl
        run: |
          wget https://ftp.gnu.org/gnu/nettle/nettle-3.7.3.tar.gz
          tar -xzf nettle-3.7.3.tar.gz
          cd nettle-3.7.3
          CC=musl-gcc ./configure --prefix=/usr/local
          make -j$(nproc)
          sudo make install
          # Verify installation
          echo "Checking Nettle headers:"
          ls -l /usr/local/include/nettle/ || echo "Nettle headers not found"
          echo "Checking Nettle libs:"
          ls -l /usr/local/lib/libnettle* || echo "Nettle libs not found"
          echo "Checking Nettle pkg-config:"
          ls -l /usr/local/lib/pkgconfig/nettle.pc || echo "nettle.pc not found"

      - name: Build and install GnuTLS with musl
        run: |
          wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-3.7.8.tar.xz
          tar -xJf gnutls-3.7.8.tar.xz
          cd gnutls-3.7.8
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          CC=musl-gcc ./configure --prefix=/usr/local \
            --with-included-libtasn1 \
            --with-included-unistring \
            --without-p11-kit \
            --disable-guile \
            --disable-doc \
            --with-nettle-mini \
            --with-libnettle-prefix=/usr/local
          make -j$(nproc)
          sudo make install
          # Verify installation
          echo "Checking GnuTLS headers:"
          ls -l /usr/local/include/gnutls/ || echo "GnuTLS headers not found"
          echo "Checking GnuTLS libs:"
          ls -l /usr/local/lib/libgnutls* || echo "GnuTLS libs not found"

      - name: Build and install libetpan
        run: |
          git clone https://github.com/dinhvh/libetpan.git
          cd libetpan
          ./autogen.sh
          CC=musl-gcc ./configure --prefix=/usr/local
          make -j$(nproc)
          sudo make install
          # Debug: Verify installation
          echo "Checking libetpan headers:"
          ls -l /usr/local/include/libetpan/ || echo "libetpan headers not found"
          echo "Checking libetpan libs:"
          ls -l /usr/local/lib/libetpan* || echo "libetpan libs not found"
          echo "Checking libetpan pkg-config:"
          ls -l /usr/local/lib/pkgconfig/libetpan.pc || echo "libetpan.pc not found"
          pkg-config --modversion libetpan || echo "pkg-config cannot find libetpan"

      - name: Clone Claws Mail source
        run: |
          git clone https://git.claws-mail.org/readonly/claws.git claws-mail
          cd claws-mail
          git checkout claws-4.3.0 || echo "Tag claws-4.3.0 not found; using latest commit"

      - name: Build Claws Mail with musl
        run: |
          cd claws-mail
          ./autogen.sh
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          CC=musl-gcc CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" \
            ./configure --prefix=/tmp/appdir/usr --disable-manual --disable-gtk3
          make -j$(nproc) CFLAGS="-I/usr/local/include"
          make install

      - name: Bundle libraries
        run: |
          mkdir -p /tmp/appdir/usr/lib
          for lib in \
            libgtk-3.so.0 libgdk-3.so.0 libglib-2.0.so.0 libgobject-2.0.so.0 \
            libetpan.so.20 libgnutls.so.30 libnotify.so.4 libstartup-notification-1.so.0 \
            libcompface.so.1 libc.so.6; do
            cp -v /usr/lib/x86_64-linux-gnu/$lib /tmp/appdir/usr/lib/ 2>/dev/null || \
            cp -v /lib/x86_64-linux-gnu/$lib /tmp/appdir/usr/lib/ 2>/dev/null || \
            cp -v /usr/local/lib/$lib /tmp/appdir/usr/lib/ 2>/dev/null || \
            echo "Warning: $lib not found"
          done

      - name: Download linuxdeployqt and appimagetool
        run: |
          wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -O linuxdeployqt
          wget -c https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x linuxdeployqt appimagetool

      - name: Create AppRun
        run: |
          cat << 'EOF' > /tmp/appdir/AppRun
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          export PATH="$HERE/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:$PATH"
          export LD_LIBRARY_PATH="$HERE/usr/lib:$LD_LIBRARY_PATH"
          LOGFILE="$HOME/claws-mail-appimage-run.log"
          echo "Starting Claws Mail..." >> "$LOGFILE"
          echo "PATH: $PATH" >> "$LOGFILE"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH" >> "$LOGFILE"
          echo "LOGFILE: $LOGFILE" >> "$LOGFILE"
          echo "Checking dependencies..." >> "$LOGFILE"
          ldd "$HERE/usr/bin/claws-mail" >> "$LOGFILE" 2>&1
          "$HERE/usr/bin/claws-mail" "$@" >> "$LOGFILE" 2>&1
          EXIT_CODE=$?
          echo "Claws Mail exited with code $EXIT_CODE" >> "$LOGFILE"
          exit $EXIT_CODE
          EOF
          chmod +x /tmp/appdir/AppRun

      - name: Create desktop file
        run: |
          cat << 'EOF' > /tmp/appdir/claws-mail.desktop
          [Desktop Entry]
          Name=Claws Mail
          Exec=claws-mail
          Type=Application
          Icon=claws-mail
          Categories=Network;Email;
          Terminal=false
          EOF

      - name: Copy icon
        run: |
          wget -O /tmp/appdir/claws-mail.png https://www.claws-mail.org/img/claws-mail_icon_64.png || echo "Icon download failed"

      - name: Bundle with linuxdeployqt
        run: |
          ./linuxdeployqt /tmp/appdir/usr/bin/claws-mail -bundle-non-qt-libs -unsupported-allow-new-glibc -verbose=2

      - name: Package AppImage
        run: |
          ./appimagetool --no-appstream -v /tmp/appdir claws-mail-4.3.0-x86_64.AppImage

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: claws-mail-appimage
          path: claws-mail-4.3.0-x86_64.AppImage
