name: Build Claws Mail Bundled Binary for Void

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: alpine:edge

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: |
          apk update
          apk add --no-cache \
            bash build-base curl tar pkgconf linux-headers

      - name: Install ICU 74 from source
        run: |
          wget https://github.com/unicode-org/icu/releases/download/release-74-2/icu4c-74_2-src.tgz -O icu.tar.gz
          tar -xzf icu.tar.gz
          cd icu/source
          ./configure --prefix=/usr --disable-static
          make -j$(nproc)
          make install
          rm -rf ../../icu.tar.gz ../../icu
          # Verify ICU 74 libraries
          ls -l /usr/lib/libicu*.so.74 || { echo "ICU 74 libraries not found"; exit 1; }
          # Set linker path for subsequent steps
          export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH
          echo "LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Claws Mail dependencies
        run: |
          apk add --no-cache \
            git wget \
            musl-dev gtk+3.0-dev fuse \
            libetpan-dev gnutls-dev gpgme-dev enchant2-dev \
            poppler-dev libcanberra-dev libnotify-dev perl-dev \
            python3-dev libical-dev libarchive-dev openldap-dev \
            db-dev libx11-dev libsm-dev libsoup-dev \
            gumbo-parser-dev libsecret-dev json-glib-dev \
            ghostscript spamassassin appstream-glib \
            glib-dev
          # Manually extract ICU-dependent packages
          wget -q -O webkit2gtk-4.1-dev.apk "https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/webkit2gtk-4.1-dev-2.46.4-r0.apk"
          wget -q -O qt5-qtbase-dev.apk "https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/qt5-qtbase-dev-5.15.10_git20230714-r3.apk"
          # Extract instead of using apk add
          mkdir -p /tmp/webkit /tmp/qt5
          tar -xzf webkit2gtk-4.1-dev.apk -C /tmp/webkit
          tar -xzf qt5-qtbase-dev.apk -C /tmp/qt5
          cp -r /tmp/webkit/usr/* /usr/
          cp -r /tmp/qt5/usr/* /usr/
          rm -rf *.apk /tmp/webkit /tmp/qt5

      - name: Download Claws Mail source
        run: |
          mkdir -p ~/claws-mail-build
          cd ~/claws-mail-build
          wget "https://www.claws-mail.org/download.php?file=releases/claws-mail-4.3.0.tar.xz" -O claws-mail-4.3.0.tar.xz
          tar -xf claws-mail-4.3.0.tar.xz

      - name: Configure Claws Mail with all plugins
        run: |
          cd ~/claws-mail-build/claws-mail-4.3.0
          ./configure \
            --prefix=/usr \
            --enable-gtk3 --enable-libetpan --enable-gnutls --enable-pgp-core \
            --enable-pgp-inline --enable-pgp-mime --enable-enchant --enable-poppler \
            --enable-canberra --enable-notify --enable-perl --enable-python \
            --enable-vcalendar --enable-ldap \
            --enable-dillo --enable-fancy --enable-rssyl --enable-spamassassin \
            --enable-bogofilter --enable-notification --enable-pdf-viewer \
            --enable-spam-report --enable-address-keeper --enable-acpi-notifier \
            --enable-maildir --enable-newmail --enable-managesieve \
          || { echo "Configuration failed, check config.log"; cat config.log; exit 1; }
          grep "yes" config.log || echo "No features explicitly enabled"

      - name: Build Claws Mail
        run: |
          cd ~/claws-mail-build/claws-mail-4.3.0
          make -j$(nproc) || { echo "Build failed"; exit 1; }

      - name: Install Claws Mail to a staging directory
        run: |
          cd ~/claws-mail-build/claws-mail-4.3.0
          mkdir -p ~/claws-mail-install/usr
          make install DESTDIR=~/claws-mail-install || { echo "Installation failed"; exit 1; }

      - name: Bundle all shared library dependencies
        run: |
          cd ~/claws-mail-install
          # Copy the binary
          cp ~/claws-mail-build/claws-mail-4.3.0/src/claws-mail usr/bin/
          # Find and copy all shared libraries
          ldd usr/bin/claws-mail | grep -o '/[^ ]*\.so[^ ]*' | sort -u | while read lib; do
            cp -v "$lib" usr/lib/ || { echo "Warning: $lib not found, may need manual inclusion"; continue; }
          done
          # Include ICU 74 and GnuTLS explicitly
          cp -v /usr/lib/libicu*.so.74* usr/lib/
          cp -v /usr/lib/libgnutls*.so* usr/lib/
          # Copy additional common libraries
          for lib in /usr/lib/lib*.so*; do
            cp -v "$lib" usr/lib/ || true
          done
          # Strip binaries to reduce size
          strip usr/bin/claws-mail usr/lib/*.so* 2>/dev/null || true

      - name: Create tarball with binary and libraries
        run: |
          cd ~/claws-mail-install
          tar -czf ~/claws-mail-4.3.0-void-bundled.tar.gz .

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: claws-mail-void-bundled
          path: ~/claws-mail-4.3.0-void-bundled.tar.gz

      - name: Display SHA256 checksum
        run: |
          sha256sum ~/claws-mail-4.3.0-void-bundled.tar.gz
